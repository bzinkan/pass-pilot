# Replit Test Checklist — PassPilot Delete Flow

## 1) Environment Setup

* [ ] In **Replit Deploy Env Vars** (not workspace secrets), set:

  * `SESSION_SECRET` (random string)
  * `SUPERADMIN_PASSWORD` (strong admin password)
  * `STRIPE_SECRET_KEY` (real or test key)
  * DB connection vars (e.g., `DATABASE_URL`)
* [ ] Redeploy after setting env vars.

---

## 2) Basic Code Check

```bash
npm run build   # or tsc --noEmit
npm run lint    # optional but helpful
```

* Fix any syntax errors, missing imports, or type issues.

---

## 3) Server Boot Test

* [ ] Run `npm run dev` in Replit preview mode.
* [ ] Check server logs for **no startup errors**.
* [ ] If DB connection errors appear, fix before testing routes.

---

## 4) DB Constraint Check

Run cascade checker script:

```bash
npx ts-node scripts/checkCascades.ts
```

* If output lists missing cascades → run generator:

```bash
npx ts-node scripts/generateCascadeMigrations.ts
```

* Apply generated SQL migration to DB.

---

## 5) Login Flow Test

In browser console:

```js
fetch('/api/admin/login', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ password: 'YOUR_SUPERADMIN_PASSWORD' }),
  credentials: 'include',
}).then(r => r.json()).then(console.log);
```

* Expect `{ ok: true }`.
* In Application/Storage tab → see `admin_session` cookie.

---

## 6) Delete Route Test

After login in browser console:

```js
fetch('/api/admin/schools/SOME-UUID', {
  method: 'DELETE',
  credentials: 'include',
}).then(r => r.json()).then(console.log);
```

* Expect `{ ok: true, id: '...' }`.
* Check DB and UI — school is gone.

---

## 7) UI Integration Test

* [ ] Load admin schools list in frontend.
* [ ] Click 🗑️ button → confirm typed name → row disappears.
* [ ] Refresh page → confirm deletion persists.

---

## 8) Stripe Test Mode

* [ ] Delete a school with valid `stripeSubId`.
* [ ] Check Stripe Dashboard (test mode) — subscription should be canceled.

---

## 9) Error Handling Test

Test each scenario:

* Wrong password → `{ error: 'bad_credentials' }`
* Bad UUID → `{ error: 'bad_id' }`
* Nonexistent school → `{ error: 'not_found' }`
* Missing `SESSION_SECRET` env var → login fails

---

## 10) Final Deploy Check

* [ ] Redeploy with correct env vars in **Deploy env**.
* [ ] Test full login → delete flow on production URL.
